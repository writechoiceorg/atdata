openapi: 3.0.0
info:
  title: List API
  description: >-
    AtData API's help you improve the quality and depth of your customer data by
    enabling you to quickly and securely verify and enhance email addresses.
  version: 1.0.0
servers:
- url: https://api.atdata.com
paths:
  /v5/list:
    post:
      summary: Submit Lists
      operationId: Submit-lists
      tags:
        - List API
      parameters:
        - in: header
          name: api_key
          required: true
          schema:
            type: string
          description: Your AtData API key
        - in: header
          name: Content-Type
          required: true
          schema:
            type: string
            enum: [text/csv, multipart/form-data]
          description: Type of media to be sent.
        - in: query
          name: email_column
          required: false
          schema:
            type: integer
          description: >-
            If email address is in the file, the index of the column containing
            it, starting at 1.
        - in: query
          name: header
          required: false
          schema:
            default: false
            type: boolean
          description: >-
            Used to indicate the presence of a header line with a value of true
            or false. Must be used for non-email fields.
        - in: query
          name: delimiter
          required: false
          schema:
            default: \\t
            type: string
            enum: [',', '|', '\\t']
          description: >-
            The character used to separate multiple columns within the file.
            Default variable is tab (\\t).
        - in: query
          name: action
          required: false
          schema:
            default: process
            type: string
            enum:
              - process
              - report
          description: |
            Choose between processing the data, or generating a report from it:
            - `process`: Processes the data to purchase it.
            - `report`: Generates a report from the data without purchasing it.
        - in: query
          name: name
          required: false
          schema:
            type: string
            default: myfile.csv
          description: >-
            File name, which must use one of these file extensions: `.txt`, `.csv` or
            `.zip`. Default value: `myfile.csv`.
        - in: query
          name: fields
          required: false
          schema:
            type: string
          description: >-
            A comma-separated list of the data fields you want returned. By
            default, all available fields are returned.
        - in: query
          name: callback_url
          required: false
          schema:
            type: string
          description: >-
            A valid webhook/callback URL with a max length of 512 characters,
            that can accept POST requests with a JSON payload and uses **https** or
            **http** (AtData recommends using https).

            ⚠️ <small>[URL Encoding](https://www.w3schools.com/tags/ref_urlencode.ASP) required.</small> ⚠️ 
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
                  description: File with list of customers to be validated.
      responses:
        '200':
          description: List submitted successfully
          headers:
            Location:
              description: >-
                The URL that can be queried to check the status of a file.
              schema:
                type: string
                example: https://api.atdata.com/v5/list/4321
          content:
            application/json:
              schema:
                type: object
                properties:
                  list_id:
                    type: integer
                    description: The ID of the submitted list
                  size_bytes:
                    type: integer
                    description: The size of the submitted list in bytes
              example:
                list_id: 4321
                size_bytes: 22709
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  timestamp:
                    type: integer
                  status:
                    type: integer
                  error:
                    type: string
                  exception:
                    type: string
                  message:
                    type: string
                  path:
                    type: string
                example:
                  timestamp: 1717840778086
                  status: 500
                  error: Internal Server Error
                  exception: org.springframework.web.multipart.MultipartException
                  message: >-
                    Could not parse multipart servlet request; nested exception
                    is java.io.IOException: org.apache.tomcat.util.http.fileupload.FileUploadException: the request was rejected because no multipart boundary was found
                  path: /v5/list
  /v5/list/{list_id}:
    get:
      summary: Check List Status
      operationId: check-list-status
      tags:
        - List API
      parameters:
        - in: path
          name: list_id
          required: true
          schema:
            type: string
          description: The ID of the list to check.
        - in: header
          name: api_key
          required: true
          schema:
            type: string
          description: Your AtData API key
      responses:
        '200':
          description: List status retrieved successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  list_id:
                    type: integer
                    description: The ID of the submitted list
                  name:
                    type: string
                    description: The name of the submitted list
                  status:
                    type: string
                    description: The status of the submitted list
                  records:
                    type: integer
                    description: The number of records in the list
                  size_bytes:
                    type: integer
                    description: The size of the submitted list in bytes
                  created_at:
                    type: string
                    format: date-time
                    description: The creation time of the list
                  services:
                    type: object
                    properties:
                      email_validation:
                        type: object
                        properties:
                          input_count:
                            type: integer
                            description: The number of input emails
                          completed_count:
                            type: integer
                            description: The number of completed validations
                          status:
                            type: string
                            description: The status of the email validation
                      email_intelligence:
                        type: object
                        properties:
                          input_count:
                            type: integer
                            description: The number of input emails
                          completed_count:
                            type: integer
                            description: The number of completed intelligence checks
                          status:
                            type: string
                            description: The status of the email intelligence
                      alternate_email_append:
                        type: object
                        properties:
                          input_count:
                            type: integer
                            description: The number of input emails
                          completed_count:
                            type: integer
                            description: The number of completed append checks
                          reporting:
                            type: object
                            properties:
                              alternate_match_type:
                                type: object
                                properties:
                                  "Individual match":
                                    type: integer
                                  "Household match":
                                    type: integer
                                  "2nd Individual match":
                                    type: integer
                                  "2nd Household match":
                                    type: integer
                                  "3rd Individual match":
                                    type: integer
                                  "3rd Household match":
                                    type: integer
                                  "4th Individual match":
                                    type: integer
                                  "4th Household match":
                                    type: integer
                                  "5th Individual match":
                                    type: integer
                                  "5th Household match":
                                    type: integer
                          status:
                            type: string
                            description: The status of the alternate email append
                      email_append:
                        type: object
                        properties:
                          input_count:
                            type: integer
                            description: The number of input emails
                          completed_count:
                            type: integer
                            description: The number of completed append checks
                          reporting:
                            type: object
                            properties:
                              email_match_type:
                                type: object
                                properties:
                                  "Individual match":
                                    type: integer
                                  "Household match":
                                    type: integer
                          status:
                            type: string
                            description: The status of the email append
              examples:
                processing:
                  summary: Processing
                  value:
                    list_id: 4321
                    name: customer_emails.csv
                    status: Pending
                    records: 1002
                    size_bytes: 22709
                    created_at: "2017-10-19T20:46:58Z"
                    services:
                      email_validation:
                        input_count: 1002
                        completed_count: 100
                        status: Processing
                      email_intelligence:
                        input_count: 1002
                        completed_count: 700
                        status: Processing
                alternate_email:
                  summary: Alternate Email
                  value:
                    list_id: 14475
                    name: myfile.txt
                    status: Results
                    records: 800
                    size_bytes: 19168
                    created_at: "2024-01-30T19:22:37Z"
                    services:
                      alternate_email_append:
                        input_count: 800
                        completed_count: 800
                        reporting:
                          alternate_match_type:
                            "Individual match": 64
                            "Household match": 25
                            "2nd Individual match": 0
                            "2nd Household match": 0
                            "3rd Individual match": 0
                            "3rd Household match": 0
                            "4th Individual match": 0
                            "4th Household match": 0
                            "5th Individual match": 0
                            "5th Household match": 0
                        status: Completed
                email_append:
                  summary: Email Append
                  value:
                    list_id: 4321
                    name: customer_addresses.csv
                    created_at: "2017-10-19T20:46:58Z"
                    status: Results
                    records: 1002
                    size_bytes: 22709
                    services:
                      email_append:
                        status: Completed
                        input_count: 1002
                        completed_count: 1002
                        reporting:
                          email_match_type:
                            "Individual match": 200
                            "Household match": 50
                email_intelligence:
                  summary: Email Intelligence
                  value:
                    list_id: 4465
                    name: emails.txt
                    records: 130
                    status: Processed
                    size_bytes: 2786
                    created_at: "2019-07-24T20:47:25Z"
                    services:
                      email_intelligence:
                        status: Completed
                        input_count: 130
                        completed_count: 130
                        reporting:
                          age:
                            "Total Count": 26
                          marital_status:
                            "Total Count": 19
                          household_income:
                            "Total Count": 19
                          home_owner_status:
                            "Total Count": 19
                          home_market_value:
                            "Total Count": 19
        '404':
          description: List not found
          content:
            text/plain:
              schema:
                type: string
                example: 'List not found: 1234'
  /v5/list/{list_id}/purchase:
    post:
      summary: Purchase List Results
      operationId: purchase-list-results
      tags:
        - List API
      parameters:
        - in: path
          name: list_id
          required: true
          schema:
            type: string
          description: The ID of the list to be purchased.
        - in: header
          name: api_key
          required: true
          schema:
            type: string
          description: Your AtData API key
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                fields:
                  type: array
                  description: Specify which match fields you wish to receive results on by listing them in the fields array. If you don't specify fields, all matched fields will be purchased.
                  items:
                    type: string
                  example: ["gender", "postal_address"]
                options:
                  type: object
                  description: For Email Append, you can specify the type of match you want to receive.
                  properties:
                    email_append:
                      type: object
                      properties:
                        match_type:
                          type: string
                          example: "I"
      responses:
        '404':
          description: List not found
          content:
            text/plain:
              schema:
                type: string
                example: 'List not found: 1234'
  /v5/list/{list_id}/results:
    get:
      summary: Retrieve List Results
      operationId: retrieve-list-results
      tags:
        - List API
      parameters:
        - in: path
          name: list_id
          required: true
          schema:
            type: string
          description: The ID of the list to be retrieved.
        - in: header
          name: api_key
          required: true
          schema:
            type: string
          description: Your AtData API key
      responses:
        '200':
          description: File retrieved successfully
          headers:
            Content-Disposition:
              description: >
                Indicates if the content is expected to be displayed inline in the browser, that is, as a Web page or as part of a Web page, or as an attachment, that is downloaded and saved locally.
              schema:
                type: string
                example: attachment; filename={filename}-{list_id}-TowerData.{extension}
            Content-Type:
              description: The MIME type of the returned content.
              schema:
                type: string
                example: application/zip
        '404':
          description: File not found
          content:
            text/plain:
              schema:
                type: string
                example: 'File not found'