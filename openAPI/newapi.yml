openapi: 3.0.0
info:
  title: AtData API
  description: >-
    AtData API's help you improve the quality and depth of your customer data by
    enabling you to quickly and securely verify and enhance email addresses.
  version: 1.0.0
servers:
- url: https://api.atdata.com
paths:
  /v5/ev:
    get:
      summary: SafeToSend
      tags:
        - SafeToSend Email Verification
      description: >-
        The SafeToSend API verifies email addresses to filter out invalid and
        high risk email addresses which results in higher open rates, clicks and
        conversions.
      parameters:
        - in: query
          name: api_key
          required: true
          schema:
            type: string
          description: Your AtData API key
        - in: query
          name: email
          required: true
          schema:
            type: string
          description: The email address to be validated
          example: sales@atdata.com
      responses:
        '200':
          description: SafeToSend email
          content:
            application/json:
              schema:
                type: object
                properties:
                  safe_to_send:
                    type: object
                    properties:
                      domain_type:
                        type: string
                      status_code:
                        type: integer
                      address:
                        type: string
                      role_account:
                        type: boolean
                      status:
                        type: string
                example:
                  safe_to_send:
                    domain_type: biz
                    status_code: 50
                    address: sales@atdata.com
                    role_account: true
                    status: safetosend
  /v5/eppend:
    get:
      summary: Email Append
      tags:
      - Identity Matching
      description: >-
        Append additional information to an email address.
      parameters:
        - in: query
          name: first
          required: false
          schema:
            type: string
          description: First name of person
        - in: query
          name: last
          required: false
          schema:
            type: string
          description: Last name of person
        - in: query
          name: street
          required: false
          schema:
            type: string
          description: Street number & name
        - in: query
          name: city
          required: false
          schema:
            type: string
          description: Name of city
        - in: query
          name: state
          required: false
          schema:
            type: string
          description: Two letter state abbreviation
        - in: query
          name: zip
          required: false
          schema:
            type: string
          description: >-
            Five-digit zip and, optionally, four-digit extension separated by a
            dash
        - in: query
          name: email
          required: false
          schema:
            type: string
          description: The email address to be appended
        - in: query
          name: api_key
          required: true
          schema:
            type: string
          description: Your AtData API key
      responses:
        '200':
          description: Email Append
          content:
            application/json:
              schema:
                type: object
                properties:
                  email_append:
                    type: array
                    items:
                      type: object
                      properties:
                        email_match_type:
                          type: string
                        email:
                          type: string
                example:
                  email_append:
                    - email_match_type: Individual
                      email: sample@atdata.com
  /ae:
    get:
      summary: Alternate Email
      tags:
      - Identity Matching
      description: >-
        Get an alternate email address for the provided email.
      parameters:
        - in: query
          name: email
          required: true
          schema:
            type: string
          description: The input email address
        - in: query
          name: api_key
          required: true
          schema:
            type: string
          description: Your AtData API key
      responses:
        '200':
          description: Alternate Email
          content:
            application/json:
              schema:
                type: object
                properties:
                  safe_to_send:
                    type: object
                    properties:
                      domain_type:
                        type: string
                      status_code:
                        type: integer
                      address:
                        type: string
                      engagement:
                        type: integer
                      status:
                        type: string
                example:
                  safe_to_send:
                    domain_type: biz
                    status_code: 50
                    address: sample@atdata.com
                    engagement: 6
                    status: safetosend
  /v5/td:
    get:
      summary: Intelligence API
      tags:
        - Intelligence API
      description: >-
        Retrieve information about an email address.
      parameters:
        - in: query
          name: email
          required: true
          schema:
            type: string
          description: Email Address
        - in: query
          name: first
          required: false
          schema:
            type: string
          description: First name of person
        - in: query
          name: last
          required: false
          schema:
            type: string
          description: Last name of person
        - in: query
          name: api_key
          required: true
          schema:
            type: string
          description: Your AtData API key
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  gender:
                    type: string
                example:
                  gender: Female
  /v5/ei/bulk:
    post:
      summary: Bulk Intelligence Endpoint
      tags:
        - Intelligence API
      description: >-
        Submit a list of email addresses to Intelligence API.
      parameters:
        - in: query
          name: api_key
          required: true
          schema:
            type: string
          description: Your AtData API key
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: object
                properties:
                  email:
                    type: string
                    description: The email address of the person
                  first:
                    type: string
                    description: First name of the person
                  last:
                    type: string
                    description: Last name of the person
              example:
                - email: sample@atdata.com
                  first: Caitlin
                  last: Plackard
                - email: unknown_email@domain.com
                - email: demo@atdata.com
                - email: NOT_AN_EMAIL_ADDRESS
      responses:
        '200':
          description: Bulk Intelligence Endpoint
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    gender:
                      type: string
                    error_code:
                      type: integer
                    error_msg:
                      type: string
                example:
                  - gender: Female
                  - {}
                  - gender: Male
                  - error_code: 400
                    error_msg: Invalid identifier
  /v5/list:
    post:
      summary: Submitting Lists
      tags:
        - List API
      description: >-
        Submit a list of customers to be validated.
      parameters:
        - in: header
          name: api_key
          required: true
          schema:
            type: string
          description: Your AtData API key
        - in: header
          name: Content-Type
          required: true
          schema:
            type: string
          description: Type of media to be sent.
        - in: header
          name: email_column
          required: false
          schema:
            type: integer
          description: >-
            If email address is in the file, the index of the column containing
            it, starting at 1.
        - in: header
          name: header
          required: false
          schema:
            type: boolean
          description: >-
            Used to indicate the presence of a header line with a value of true
            or false; default=false. Must be used for non-email fields.
        - in: header
          name: delimiter
          required: false
          schema:
            type: string
          description: >-
            The character used to separate multiple columns within the file;
            default variable is tab (\\t).
        - in: header
          name: report
          required: false
          schema:
            type: boolean
          description: >-
            For all services except validation, only produce a match report and
            do not purchase data.
        - in: header
          name: name
          required: false
          schema:
            type: string
          description: >-
            File name, which must use one of these file extensions: .txt, .csv or
            .zip; default=myfile.csv.
        - in: header
          name: fields
          required: false
          schema:
            type: string
          description: >-
            A comma-separated list of the data fields you want returned. By
            default, all available fields are returned.
        - in: header
          name: callback_url
          required: false
          schema:
            type: string
          description: >-
            A valid webhook/callback URL with a max length of 512 characters,
            that can accept POST requests with a JSON payload and uses https or
            http (https is strongly encouraged).
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                customer_emails.csv:
                  type: string
                  format: binary
                  description: File with list of customers to be validated.
      responses:
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                type: object
                properties:
                  timestamp:
                    type: integer
                  status:
                    type: integer
                  error:
                    type: string
                  exception:
                    type: string
                  message:
                    type: string
                  path:
                    type: string
                example:
                  timestamp: 1717840778086
                  status: 500
                  error: Internal Server Error
                  exception: org.springframework.web.multipart.MultipartException
                  message: >-
                    Could not parse multipart servlet request; nested exception
                    is java.io.IOException: org.apache.tomcat.util.http.fileupload.FileUploadException: the request was rejected because no multipart boundary was found
                  path: /v5/list
  /v5/list/{list_id}:
    get:
      summary: Check List Status
      tags:
        - List API
      description: >-
        Check the status of a submitted list.
      parameters:
        - in: path
          name: list_id
          required: true
          schema:
            type: string
          description: The ID of the list to check.
        - in: header
          name: api_key
          required: true
          schema:
            type: string
          description: Your AtData API key
      responses:
        '404':
          description: List not found
          content:
            text/plain:
              schema:
                type: string
                example: 'List not found: 1234'
  /v5/list/{list_id}/purchase:
    post:
      summary: Purchase List Results
      tags:
        - List API
      description: >-
        Purchase the results of a submitted list.
      parameters:
        - in: path
          name: list_id
          required: true
          schema:
            type: string
          description: The ID of the list to be purchased.
        - in: header
          name: api_key
          required: true
          schema:
            type: string
          description: Your AtData API key
      responses:
        '404':
          description: List not found
          content:
            text/plain:
              schema:
                type: string
                example: 'List not found: 1234'
  /v5/list/{list_id}/results:
    get:
      summary: Retrieve List Results
      tags:
        - List API
      description: >-
        Retrieves the results of a submitted list.
      parameters:
        - in: path
          name: list_id
          required: true
          schema:
            type: string
          description: The ID of the list to be retrieved.
        - in: header
          name: api_key
          required: true
          schema:
            type: string
          description: Your AtData API key
      responses:
        '404':
          description: File not found
          content:
            text/plain:
              schema:
                type: string
                example: 'File not found'    