openapi: 3.0.0
info:
  title: Identity Matching API
  description: >-
    AtData API's help you improve the quality and depth of your customer data by
    enabling you to quickly and securely verify and enhance email addresses.
  version: 1.0.0
servers:
- url: https://api.atdata.com
paths:
  /ae:
    get:
      summary: Alternate Email
      operationId: alternate-email
      tags:
      - Identity Matching
      parameters:
        - in: query
          name: email
          required: true
          schema:
            type: string
          description: The input email address.
        - in: query
          name: api_key
          required: true
          schema:
            type: string
          description: Your AtData API key.
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  alternate_email:
                    type: array
                    items:
                      type: object
                      properties:
                        email:
                          type: string
                          description: The alternate email address
                        email_match_type:
                          type: string
                          description: The type of email match
              example:
                alternate_email:
                  - email: cplackard@domain.com
                    email_match_type: Individual
                  - email: chris.plackard@domain2.com
                    email_match_type: Individual
  /v5/eppend:
    get:
      summary: Email Append
      operationId: email-append
      tags:
      - Identity Matching
      parameters:
        - in: query
          name: first
          required: true
          schema:
            type: string
          description: First name of person.
          example: Joe
        - in: query
          name: middle
          required: false
          schema:
            type: string
          description: Middle name of person (optional).
        - in: query
          name: last
          required: true
          schema:
            type: string
          description: Last name of person.
          example: Bloggs
        - in: query
          name: street
          required: true
          schema:
            type: string
          description: Street name.
          example: 123 Main St
        - in: query
          name: city
          required: true
          example: New York
          schema:
            type: string
          description: Name of city.
        - in: query
          name: state
          required: true
          example: NY
          schema:
            type: string
          description: Two letter state abbreviation.
        - in: query
          name: zip
          required: true
          example: '38067'
          schema:
            type: string
          description: Five-digit zip code, optionally followed by a four-digit extension separated by a dash.
        - in: query
          name: api_key
          required: true
          example: <YOUR_API_KEY>
          schema:
            type: string
          description: Your AtData API key.
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  email_append:
                    type: array
                    items:
                      type: object
                      properties:
                        email:
                          type: string
                          description: The email address that matched to the name and postal address.
                        email_match_type:
                          type: string
                          description: Indicates at what level the email matched to the input individual. "Individual" means the email matched the full name and postal address. "Household" means the email matched postal address and the last name.
              examples:
                email_append:
                  summary: Success
                  value:
                    email_append:
                    - email_match_type: Individual
                      email: sample@atdata.com
                unmatched_request:
                  summary: Un-matched Request
                  value: {}
        '400':
          description: Bad Request. Some part of the request was invalid.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error_code:
                    type: integer
                    description: The error code.
                  error_msg:
                    type: string
                    description: The error message.
              example:
                error_code: 400
                error_msg: "Invalid United States postal address."
  /v5/eppend?:
    get:
      summary: Postal Append
      operationId: postal-append
      tags:
      - Identity Matching
      parameters:
        - in: query
          name: email
          required: true
          schema:
            type: string
          description: >-
            The raw email address. It must be [URL encoded](https://www.w3schools.com/tags/ref_urlencode.ASP).

            <small>Example: demo+email@atdata.com encoded outputs to: demo%2Bemail%40atdata.com</small>
        - in: query
          name: sha1_email
          required: false
          schema:
            type: string
          description: >-
            [SHA-1](https://en.wikipedia.org/wiki/SHA-1) hashed email. The email must be lower case and stripped of white spaces before being hashed.

            <small>Example: demo@atdata.com hashed outputs to: 1d604932232d089ab1a1cad148f20d942db666a7</small>
        - in: query
          name: md5_email
          required: false
          schema:
            type: string
          description: >-
            [MD5](https://en.wikipedia.org/wiki/MD5) hashed email. The email must be lower case and stripped of white spaces before being hashed.

            <small>Example: demo@atdata.com hashed outputs to: 3cf1e81405a4bdf4f7e3a2453cd441c3</small>
        - in: query
          name: api_key
          example: <YOUR_API_KEY>
          required: true
          schema:
            type: string
          description: Your AtData API key.
      responses:
        '200':
          description: Successful Response
          content:
            application/json:
              schema:
                type: object
                properties:
                  postal_address:
                    type: object
                    properties:
                      first_name:
                        type: string
                        description: The first name of the person..
                      last_name:
                        type: string
                        description: The last name of the person.
                      address:
                        type: string
                        description: The street number & name.
                      city:
                        type: string
                        description: The name of the city.
                      state:
                        type: string
                        description: The two-letter state abbreviation.
                      zip:
                        type: string
                        description: >-
                          The five-digit zip code, optionally followed by a 
                          four-digit extension separated by a dash.
                example:
                  postal_address:
                    first_name: CAITLIN
                    last_name: PLACKARD
                    address: 789 CHESTNUT ST
                    city: SAN FRANCISCO
                    state: CA
                    zip: 94133-1234
  